//================================================================//
//===// Incorporating required default layout scss variables //===//
//================================================================//

@use '../abstracts' as *;

//============================//
//===// Layout - default //===//
//============================//

//===// Root //===//

:root {
  --transition-duration: 250ms;
}

//===// Scrollbar //===//

::-webkit-scrollbar {
  width: 0.8rem;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: color(secondary-clr);
}

//===// Text selection //===//

::selection {
  background-color: color(accent-clr);
  color: color(selection-clr);
}

//===// Body //===//

body {
  background-color: color(primary-clr);
  color: color(secondary-clr);
  font-family: font(main);
  line-height: 1.5;
}

//===// Container //===//

.container {
  width: 80%;
  max-width: 800px;
  margin: 0 auto;
  padding: 1rem 1rem 2rem;
}

//===// Header //===//

.header {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-block-start: 1.5rem;

  &__title {
    font-size: 1.25rem;
  }

  &__control {
    display: flex;
    gap: 1rem;
  }

  &__show-btn {
    font-weight: 700;
  }
}

//===// Main //===//

//===// Create task

.create-task {
  display: flex;
  flex-direction: column;
  height: 100%;
  visibility: hidden;
  margin-block: 0.75rem;
  padding-block: 0.5rem;
  transition: height var(--transition-duration) ease-in-out, visibility var(--transition-duration) ease-in-out,
    margin var(--transition-duration) ease-in-out;
  animation: create-task-hide var(--transition-duration) ease-in-out;

  &--visible {
    visibility: visible;
    margin-block: 1.25rem 2rem;
    animation: create-task-show var(--transition-duration) ease-in-out;
  }

  & > div:nth-child(2) {
    margin-block-start: 1rem;
  }

  &__label {
    display: block;
    position: relative;
    font-size: 1rem;
    margin-block-end: 0.25rem;

    &::before {
      right: 0;

      @include error;
    }

    &[for='name']::before {
      content: 'Please fill in the name field!';
    }

    &[for='date']::before {
      content: 'Please fill in the date field!';
    }
  }

  .error.create-task__label::before {
    opacity: 1;
    visibility: visible;
  }

  &__input {
    position: relative;
    width: 100%;
    background-color: color(primary-clr);
    border: 3px solid color(secondary-clr);
    color: color(secondary-clr);
    font-size: 1.15rem;
    padding: 0.5em;

    &[name='date'] {
      &::-webkit-calendar-picker-indicator {
        position: absolute;
        inset: 0;
        left: 7.8rem;
        height: auto;
        width: auto;
        cursor: pointer;
        background: transparent;
        color: transparent;
        border-inline-start: 3px solid color(secondary-clr);

        &:focus {
          outline-offset: -8px;
        }
      }

      &::before {
        content: '\f133';
        position: absolute;
        top: 50%;
        right: 21px;
        color: color(secondary-clr);
        font-family: 'Font Awesome 6 Free';
        translate: 0 -50%;
      }
    }
  }

  &__actions {
    margin-block-start: 2rem;
    width: 100%;
    display: flex;
    gap: 1rem;
  }

  &__submit {
    width: 100%;
    font-size: 1.25rem;
    transition: box-shadow var(--transition-duration) ease-in-out,
      background-color var(--transition-duration) ease-in-out;

    &:is(:hover, :focus) {
      background-color: color(create-clr);
    }

    &:active {
      background-color: color(create-clr--active);
    }

    &--error {
      background-color: color(danger-clr);

      &:is(:hover, :focus) {
        background-color: color(danger-clr);
      }

      &:active {
        background-color: color(danger-clr--active);
      }
    }
  }

  &__clear {
    width: min-content;
    transition: box-shadow var(--transition-duration) ease-in-out,
      background-color var(--transition-duration) ease-in-out;

    &:is(:hover, :focus) {
      background-color: color(danger-clr);
    }

    &:active {
      background-color: color(danger-clr--active);
    }
  }
}

//===// Tasks

.tasks {
  border-block-start: 3px solid color(secondary-clr);
  padding-block-start: 2rem;
  margin-block-end: 8rem;

  &__title {
    margin-block-end: -1rem;
  }

  &__container {
    display: flex;
    flex-direction: column;
    gap: 3rem;
  }

  &__no-tasks {
    margin-block-end: 4rem;
  }
}

//===// Task

.task {
  &__name {
    position: relative;
    width: 100%;
    overflow: visible;
    cursor: pointer;
    font-size: 1.15rem;
    border: none;
    background-color: color(primary-clr);
    color: color(secondary-clr);
    padding: 0.5em 0;

    &:is(:hover, :focus) + &-border::after {
      scale: 100% 100%;
    }

    &-border {
      position: relative;
      display: block;

      &::before {
        @include error;

        content: "Task name can't be empty!";
        top: -2.5rem;
        right: 0;
        z-index: 1;
      }

      &::after {
        content: '';
        position: absolute;
        top: -6px;
        height: 3px;
        width: 100%;
        pointer-events: none;
        user-select: none;
        background-color: color(secondary-clr);
        scale: 25% 100%;
        transform-origin: left;
        transition: scale var(--transition-duration) ease-in-out;
      }
    }
  }

  .error.task__name-border::before {
    opacity: 1;
    visibility: visible;
  }

  &__date {
    display: flex;
    gap: 0.1em;
    margin-block: 1rem 2rem;
    align-items: center;

    &-input {
      position: relative;
      width: 7rem;
      cursor: pointer;
      background-color: color(primary-clr);
      border: none;
      color: color(secondary-clr);
      font-size: 1.05rem;
      font-family: inherit;
      padding-block: 0.2em;

      &::-webkit-calendar-picker-indicator {
        display: none;
      }

      &::-moz-clear {
        display: none;
      }
    }

    &:has(&-input) &-input {
      width: 5.5rem;
    }

    & &-picker {
      border: none;
      background-color: color(primary-clr);
      font-size: 1.05rem;
      color: color(secondary-clr);
      padding: 0.3575em;
      transition: scale var(--transition-duration) ease-in-out;

      &:is(:hover, :focus) {
        scale: 1.15;
      }
    }
  }

  &__change {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(5, auto);
    grid-auto-rows: 1fr;
    gap: 2rem 0.5rem;

    & > * span {
      height: 100%;
      display: grid;
      place-items: center;
    }

    &-container {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }

    &-title {
      box-shadow: 5px 5px color(primary-clr--dimmed);
      background-color: color(secondary-clr);
      color: color(primary-clr);
      text-align: center;
      font-weight: 700;
      padding: 0.5em 1em;
      margin-block-end: -1rem;

      &:first-of-type {
        grid-row: 1;
        grid-column: 1;
      }

      &:nth-of-type(2) {
        grid-row: 1;
        grid-column: 2;
      }

      &:last-of-type {
        grid-row: 3;
        grid-column: span 2;
      }
    }

    &-btn {
      transition: box-shadow var(--transition-duration) ease-in-out, color var(--transition-duration) ease-in-out;

      & > i {
        transition: scale var(--transition-duration) ease-in-out;
      }

      &:is(:hover, :focus) {
        & > i {
          scale: 1.15;
        }
      }
    }

    &-value {
      box-shadow: 5px 5px color(primary-clr--dimmed);
      border: 3px solid var(--bg-clr, color(secondary-clr));
      font-weight: 700;
      text-align: center;
      transition: background-color var(--transition-duration) ease-in-out,
        border-color var(--transition-duration) ease-in-out, color var(--transition-duration) ease-in-out;
    }

    &-status {
      grid-row: 2;
      grid-column: 1;

      &-0 {
        --bg-clr: #{color(status-0-bg-clr)};

        background-color: color(status-0-bg-clr);
        color: color(status-0-clr);
      }

      &-1 {
        --bg-clr: #{color(status-1-bg-clr)};

        background-color: color(status-1-bg-clr);
        color: color(status-1-clr);
      }

      &-2 {
        --bg-clr: #{color(status-2-bg-clr)};

        background-color: color(status-2-bg-clr);
        color: color(status-2-clr);
      }
    }

    &-priority {
      grid-row: 2;
      grid-column: 2;

      &-0 {
        --bg-clr: #{color(priority-0-bg-clr)};

        background-color: color(priority-0-bg-clr);
        color: color(priority-0-clr);
      }

      &-1 {
        --bg-clr: #{color(priority-1-bg-clr)};

        background-color: color(priority-1-bg-clr);
        color: color(priority-1-clr);
      }

      &-2 {
        --bg-clr: #{color(priority-2-bg-clr)};

        background-color: color(priority-2-bg-clr);
        color: color(priority-2-clr);
      }

      &-3 {
        --bg-clr: #{color(priority-3-bg-clr)};

        background-color: color(priority-3-bg-clr);
        color: color(priority-3-clr);
      }
    }

    &-position {
      grid-row: 4;
      grid-column: span 2;

      display: flex;
      flex-direction: row;

      & > button {
        width: 100%;
      }
    }
  }

  &__remove-btn {
    grid-row: 5;
    grid-column: span 2;
    font-size: 1.5rem;
    transition: box-shadow var(--transition-duration) ease-in-out,
      background-color var(--transition-duration) ease-in-out;

    &:is(:hover, :focus) {
      background-color: color(danger-clr);
    }

    &:active {
      background-color: color(danger-clr--active);
    }
  }
}

//===// Footer //===//

.footer {
  display: flex;
  gap: 1rem;
}
